@model recycling.Model.StaffLoginViewModel
@{
    ViewBag.Title = "工作人员登录";
}

<div class="login-container">
    <h2 class="login-title">工作人员登录</h2>

    @* 错误提示 *@
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="validation-summary-errors">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    @using (Html.BeginForm("Login", "Staff", FormMethod.Post, new { @class = "staff-login-form active" }))
    {
        @Html.AntiForgeryToken()

        @* 角色选择 *@
        <div class="form-group role-selection">
            @Html.LabelFor(m => m.StaffRole, new { @class = "control-label" })
            <div class="role-options">
                @Html.RadioButtonFor(m => m.StaffRole, "recycler", new { id = "role-recycler" })
                <label for="role-recycler">回收员</label>

                @Html.RadioButtonFor(m => m.StaffRole, "admin", new { id = "role-admin" })
                <label for="role-admin">管理员</label>

                @Html.RadioButtonFor(m => m.StaffRole, "superadmin", new { id = "role-superadmin" })
                <label for="role-superadmin">超级管理员</label>
            </div>
            @Html.ValidationMessageFor(m => m.StaffRole, "", new { @class = "text-danger" })
        </div>

        @* 用户名 *@
        <div class="form-group">
            @Html.LabelFor(m => m.Username, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "请输入账号" })
            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
        </div>

        @* 密码（带小眼睛图标）*@
        <div class="form-group password-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            <div class="password-input-container">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control password-input", placeholder = "请输入密码" })
                <button type="button" class="toggle-password" aria-label="切换密码可见性">
                    <span class="glyphicon glyphicon-eye-open"></span>
                </button>
            </div>
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        @* 验证码 *@
        <div class="form-group captcha-container">
            <div class="captcha-input">
                @Html.LabelFor(m => m.Captcha, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Captcha, new { @class = "form-control", placeholder = "请输入验证码" })
                @Html.ValidationMessageFor(m => m.Captcha, "", new { @class = "text-danger" })
            </div>
            <div class="captcha-image" id="captchaImage">
                @* 验证码图片/文本将通过JS生成 *@
            </div>
        </div>

        @* 隐藏字段：存储服务器生成的验证码 *@
        @Html.HiddenFor(m => m.GeneratedCaptcha)

        @* 登录按钮 *@
        <div class="login-buttons">
            <button type="submit" class="btn btn-login">登录</button>
            <a href="@Url.Action("LoginSelect", "Home")" class="btn btn-cancel">取消</a>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <script>
        // 密码可见性切换（与文档样式一致）
        $(document).on('click', '.toggle-password', function () {
            const passwordInput = $(this).closest('.password-input-container').find('.password-input');
            const icon = $(this).find('span');

            // 切换输入类型
            const type = passwordInput.attr('type') === 'password' ? 'text' : 'password';
            passwordInput.attr('type', type);

            // 切换图标（使用bootstrap glyphicon，与文档一致）
            icon.toggleClass('glyphicon-eye-open glyphicon-eye-close');
        });

        // 生成验证码
        function generateCaptcha() {
            const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            let captcha = '';
            for (let i = 0; i < 4; i++) {
                captcha += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            // 显示验证码
            $('#captchaImage').text(captcha);
            // 存储到隐藏字段
            $('#GeneratedCaptcha').val(captcha);
        }

        // 初始化验证码
        $(function () {
            generateCaptcha();
            // 点击刷新验证码
            $('#captchaImage').click(generateCaptcha);
        });
    </script>
}